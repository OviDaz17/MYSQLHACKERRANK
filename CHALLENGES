/*
Julia asked her students to create some coding challenges. Write a query to print the hacker_id, name, and the total number of challenges created by each student. 
Sort your results by the total number of challenges in descending order. 
If more than one student created the same number of challenges, then sort the result by hacker_id. 
If more than one student created the same number of challenges and the count is less than the maximum number of challenges created, then exclude those students from the result.
*/

/*
Julia asked her students to create some coding challenges. Write a query to print the hacker_id, name, and the total number of challenges created by each student.
*/

SELECT h.hacker_id 
     , h.name
     , COUNT(*) AS challenges_created
FROM hackers as h
     INNER JOIN challenges as c ON h.hacker_id=c.hacker_id
GROUP BY h.hacker_id, h.name


/*
If more than one student created the same number of challenges and the count is less than the maximum number of challenges created, then exclude those students from the result.
*/

HAVING challenges_created = (SELECT MAX(challenges_created)
                            FROM(
                                SELECT COUNT(*) AS challenges_created   
                                FROM Challenges
                                GROUP BY hacker_id
                                ) AS sub)
OR challenges_created IN (SELECT challenges_created 
                          FROM(
                              SELECT COUNT(*) AS challenges_created
                              FROM Challenges                          /*
                              GROUP BY hacker_id
                              ) sub
                              GROUP BY challenges_created
                              HAVING COUNT(*) = 1)
ORDER BY challenges_created DESC, h.hacker_id

